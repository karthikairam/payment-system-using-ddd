server:
  port: 8082

spring:
  datasource:
    url: jdbc:h2:file:./h2-db/skiply-payment-db;MODE=PostgreSQL;DATABASE_TO_UPPER=false;DB_CLOSE_DELAY=-1
    driverClassName: org.h2.Driver
    username: ${DB_USER:sa}
    password: ${DB_PWD:password}
  jpa:
    show-sql: true
    properties:
      hibernate:
        default_schema: payment
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    # Refer: https://www.baeldung.com/spring-open-session-in-view#2-pattern-or-anti-pattern
    open-in-view: false
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        trace: false
        web-allow-others: true
  flyway:
    schema: PUBLIC
    baseline-on-migrate: true
  kafka:
    bootstrap-servers: localhost:10091
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: payment-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.skiply.system.*
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer

payment-service:
  publisher:
    kafka:
      topic:
        payment-success-response: payment-success-response

management:
  server:
    port: 8082 # Same port as application port just to avoid CORS issue from swagger

springdoc:
  show-actuator: true
  default-produces-media-type: application/json

logging:
  level:
    org:
      hibernate:
        SQL: INFO
        type:
          descriptor:
            sql:
              BasicBinder: INFO